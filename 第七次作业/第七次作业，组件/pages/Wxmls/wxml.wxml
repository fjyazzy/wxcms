{{userInfo.nickName}}:<text>学习WXML语法</text>
数据绑定:<view><text>{{message}}</text></view>
列表渲染:<view wx:for="{{array}}">zz{{item}}</view>
条件渲染:<view wx:if="{{view == 'WEBVIEW'}}">WEBVIEW</view>
<view wx:elif="{{view == 'APP'}}">APP</view>
<view wx:else="{{view == 'MINA'}}">MINA</view>

事件：
<view bindtap="add">{{count}}</view>
<view id="item-{{id}}">组件属性(需要在双引号之内)</view>
<view wx:if="{{condition}}">控制属性(需要在双引号之内)</view>
<checkbox checked="{{true}}">关键字(需要在双引号之内)，true：代表真值，false代表假值</checkbox>
三元运算:
<view hidden="{{flag ? true : false}}">Hidden</view>
算数运算：
<view>{{a + b}} + {{c}} + d</view>
逻辑判断:
<view wx:if="{{length > 5}}">超过5</view>
字符串运算
<view>{{"hello," + message}}</view>
数据路径运算
<view>{{object.key}} {{array[1]}}</view>
数组:
<view wx:for="{{[a, 1, 2, 3, 4]}}"  wx:key="index">{{item}}</view>

数据路径列表运算
<view wx:for="{{array2}}">
  {{index}}: {{item.message}}
</view>
也可指定数组当前元素的变量名
<view wx:for="{{array2}}" wx:for-index="idx" wx:for-item="itemName" wx:key="index">
  {{idx}}: {{itemName.message}}
</view>
wx:for 也可以嵌套，下边是一个九九乘法表
<view wx:for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}"  wx:key="index" wx:for-item="i">
  <view wx:for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}"  wx:key="index" wx:for-item="j">
    <view wx:if="{{i <= j}}">
      {{i}} * {{j}} = {{i * j}}
    </view>
  </view>
</view>

<block wx:key="" wx:for="{{[1, 2, 3]}}">
  <view>{{index}}:{{item}}</view>
</block>

<switch wx:for="{{objectArray}}" wx:key="index" style="display: block;">
  {{item.id}}
</switch>
<button bindtap="switch">随机调整</button>
<button bindtap="addToFront">添加一项</button>
<switch wx:for="{{numberArray}}" wx:key="index" style="display: block;">
  {{item}}
</switch>
<button bindtap="addNumberToFront">添加一项</button>
<TabBar />

<view wx:if="{{condition}}">True</view>
<view wx:if="{{length > 5}}">数值大于5</view>
<view wx:elif="{{length > 2}}">数值大于5</view>
<view wx:else>其他</view>

<block wx:if="{{true}}">
  <view>view1</view>
  <view>view2</view>
</block>

<template name="msgItem">
  <view>
    <text>{{index}}: {{msg}}</text>
    <text>Time: {{time}}</text>
  </view>
</template>
<template is="msgItem" data="{{...item1}}" />
<template is="msgItem" data="{{...item2}}" />

模板:<template name="staffName">
  <view>
    FirstName: {{firstName}}, LastName: {{lastName}}
  </view>
</template>
<template is="staffName" data="{{...staffA}}"></template>
<template is="staffName" data="{{...staffB}}"></template>
<template is="staffName" data="{{...staffC}}"></template>

is 属性可以使用 Mustache 语法，来动态决定具体需要渲染哪个模板：
<template name="odd">
  <view>odd{{time}}</view>
</template>
<template name="even">
  <view>even{{time}}</view>
</template>
<block wx:key="index" wx:for="{{[1, 2, 3, 4, 5]}}"  wx:key="index">
  <template is="{{item % 2 == 0 ? 'even' : 'odd'}}" data="{{...item2}}" />
</block>

事件
什么是事件
事件是视图层到逻辑层的通讯方式。
事件可以将用户的行为反馈到逻辑层进行处理。
事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处理函数。
事件对象可以携带额外信息，如 id, dataset, touches。
<view id="tapTest" data-hi="WeChat" bindtap="tapName">Click me!</view>

<TabBar />